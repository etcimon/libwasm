module libwasm.webgl.functions;

import libwasm.webgl.types;

nothrow:
@safe:

extern (C) {
  // void glActiveTexture(GLenum texture );
  void glAttachShader(GLuint program, GLuint shader);
    // void glBindAttribLocation ( GLuint, GLuint, const GLchar* );
    void glBindBuffer ( GLenum target, GLuint buffer );
    // void glBindFramebuffer ( GLenum, GLuint );
    // void glBindRenderbuffer ( GLenum, GLuint );
    void glBindTexture ( GLenum target, GLuint texture );
    // void glBlendColor ( GLfloat, GLfloat, GLfloat, GLfloat );
    // void glBlendEquation ( GLenum );
    // void glBlendEquationSeparate ( GLenum, GLenum );
    void glBlendFunc ( GLenum sfactor, GLenum dfactor);
    // void glBlendFuncSeparate ( GLenum, GLenum dfactorRGB, GLenum, GLenum );
    void glBufferData ( GLenum target, float[] buffer, GLenum usage);
    // void glBufferSubData ( GLenum, GLintptr, GLsizeiptr, const void* );
    // GLenum glCheckFramebufferStatus ( GLenum );
    void glClear ( GLbitfield mask );
    void glClearColor ( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
    // void glClearDepthf ( GLfloat );
    // void glClearStencil ( GLint );
    // void glColorMask ( GLboolean, GLboolean, GLboolean, GLboolean );
    void glCompileShader ( GLuint shader );
    // void glCompressedTexImage2D ( GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void* );
    // void glCompressedTexSubImage2D ( GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void* );
    // void glCopyTexImage2D ( GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint );
    // void glCopyTexSubImage2D ( GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei );
    GLuint glCreateProgram (  );
    GLuint glCreateShader ( GLenum type );
    // void glCullFace ( GLenum );
    // void glDeleteBuffers ( GLsizei, const GLuint* );
    // void glDeleteFramebuffers ( GLsizei, const GLuint* );
    // void glDeleteProgram ( GLuint );
    // void glDeleteRenderbuffers ( GLsizei, const GLuint* );
    // void glDeleteShader ( GLuint );
    // void glDeleteTextures ( GLsizei, const GLuint* );
    // void glDepthFunc ( GLenum );
    // void glDepthMask ( GLboolean );
    // void glDepthRangef ( GLfloat, GLfloat );
    // void glDetachShader ( GLuint, GLuint );
    // void glDisable ( GLenum );
    // void glDisableVertexAttribArray ( GLuint );
    void glDrawArrays ( GLenum mode, GLint first, GLsizei count );
    // void glDrawElements ( GLenum, GLsizei, GLenum, const void* );
    void glEnable ( GLenum cap );
    void glEnableVertexAttribArray ( GLuint index );
    // void glFinish (  );
    // void glFlush (  );
    // void glFramebufferRenderbuffer ( GLenum, GLenum, GLenum, GLuint );
    // void glFramebufferTexture2D ( GLenum, GLenum, GLenum, GLuint, GLint );
    // void glFrontFace ( GLenum );
    // void glGenBuffers ( GLsizei, GLuint* );
    GLuint glCreateBuffer();
    // void glGenerateMipmap ( GLenum );
    // void glGenFramebuffers ( GLsizei, GLuint* );
    // void glGenRenderbuffers ( GLsizei, GLuint* );
    // void glGenTextures ( GLsizei, GLuint* );
    GLuint glCreateTexture();
    // void glGetActiveAttrib ( GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar* );
    // void glGetActiveUniform ( GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar* );
    // void glGetAttachedShaders ( GLuint, GLsizei maxCount, GLsizei*, GLuint* );
    GLint glGetAttribLocation ( GLuint program, string name);
    // void glGetBooleanv ( GLenum, GLboolean* );
    // void glGetBufferParameteriv ( GLenum, GLenum, GLint* );
    // GLenum glGetError (  );
    // void glGetFloatv ( GLenum, GLfloat* );
    // void glGetFramebufferAttachmentParameteriv ( GLenum, GLenum, GLenum, GLint* );
    // void glGetIntegerv ( GLenum, GLint* );
    // void glGetProgramiv ( GLuint, GLenum, GLint* );
    // void glGetProgramInfoLog ( GLuint, GLsizei, GLsizei*, GLchar*infoLog );
    // void glGetRenderbufferParameteriv ( GLenum, GLenum, GLint* );
    // void glGetShaderiv ( GLuint, GLenum, GLint* );
    void glGetShaderInfoLog ( GLuint, GLsizei, GLsizei*, GLchar* infoLog );
    // void glGetShaderPrecisionFormat ( GLenum, GLenum, GLint*, GLint* );
    // void glGetShaderSource ( GLuint, GLsizei, GLsizei*, GLchar* );
    // const char* glGetString ( GLenum );
    // void glGetTexParameterfv ( GLenum, GLenum, GLfloat* );
    // void glGetTexParameteriv ( GLenum, GLenum, GLint* );
    // void glGetUniformfv ( GLuint, GLint, GLfloat* );
    // void glGetUniformiv ( GLuint, GLint, GLint* );
    GLint glGetUniformLocation ( GLuint program, string name );
    // void glGetVertexAttribfv ( GLuint, GLenum, GLfloat* );
    // void glGetVertexAttribiv ( GLuint, GLenum, GLint* );
    // void glGetVertexAttribPointerv ( GLuint, GLenum, void** );
    // void glHint ( GLenum, GLenum );
    // GLboolean glIsBuffer ( GLuint );
    // GLboolean glIsEnabled ( GLenum );
    // GLboolean glIsFramebuffer ( GLuint );
    // GLboolean glIsProgram ( GLuint );
    // GLboolean glIsRenderbuffer ( GLuint );
    // GLboolean glIsShader ( GLuint );
    // GLboolean glIsTexture ( GLuint );
    // void glLineWidth ( GLfloat );
    void glLinkProgram ( GLuint program );
    // void glPixelStorei ( GLenum, GLint );
    // void glPolygonOffset ( GLfloat, GLfloat );
    // void glReadPixels ( GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void* );
    // void glReleaseShaderCompiler (  );
    // void glRenderbufferStorage ( GLenum, GLenum, GLsizei, GLsizei );
    // void glSampleCoverage ( GLfloat, GLboolean );
    // void glScissor ( GLint, GLint, GLsizei, GLsizei );
    // void glShaderBinary ( GLsizei, const GLuint*, GLenum, const void*, GLsizei );
    void glShaderSource ( GLuint, string source );
    // void glStencilFunc ( GLenum, GLint, GLuint );
    // void glStencilFuncSeparate ( GLenum, GLenum, GLint, GLuint );
    // void glStencilMask ( GLuint );
    // void glStencilMaskSeparate ( GLenum, GLuint );
    // void glStencilOp ( GLenum, GLenum, GLenum );
    // void glStencilOpSeparate ( GLenum, GLenum, GLenum, GLenum );
    void glTexImage2D ( GLenum target, GLint level, GLint internalFormat, GLenum format, GLenum type, uint image );
    // void glTexParameterf ( GLenum, GLenum, GLfloat );
    // void glTexParameterfv ( GLenum, GLenum, const GLfloat* );
    void glTexParameteri ( GLenum target, GLenum pname, GLint param );
    // void glTexParameteriv ( GLenum, GLenum, const GLint* );
    // void glTexSubImage2D ( GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void* );
    // void glUniform1f ( GLint, GLfloat v0 );
    void glUniform1fv ( GLint location, GLfloat[] values );
    // void glUniform1i ( GLint, GLint v0 );
    // void glUniform1iv ( GLint, GLsizei, const GLint* );
    // void glUniform2f ( GLint, GLfloat v0, GLfloat v1 );
    // void glUniform2fv ( GLint, GLsizei, const GLfloat* );
    // void glUniform2i ( GLint, GLint v0, GLint v1 );
    // void glUniform2iv ( GLint, GLsizei, const GLint* );
    void glUniform3f ( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
    // void glUniform3fv ( GLint, GLsizei, const GLfloat* );
    // void glUniform3i ( GLint, GLint v0, GLint v1, GLint v2 );
    // void glUniform3iv ( GLint, GLsizei, const GLint* );
    // void glUniform4f ( GLint, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
    // void glUniform4fv ( GLint, GLsizei, const GLfloat* );
    // void glUniform4i ( GLint, GLint v0, GLint v1, GLint v2, GLint v3 );
    // void glUniform4iv ( GLint, GLsizei, const GLint* );
    // void glUniformMatrix2fv ( GLint, GLsizei, GLboolean, const GLfloat* );
    // void glUniformMatrix3fv ( GLint, GLsizei, GLboolean, const GLfloat* );
    // void glUniformMatrix4fv ( GLint, GLsizei, GLboolean, const GLfloat* );
    void glUseProgram ( GLuint program );
    // void glValidateProgram ( GLuint );
    // void glVertexAttrib1f ( GLuint, GLfloat );
    // void glVertexAttrib1fv ( GLuint, const GLfloat* );
    // void glVertexAttrib2f ( GLuint, GLfloat, GLfloat );
    // void glVertexAttrib2fv ( GLuint, const GLfloat* );
    // void glVertexAttrib3f ( GLuint, GLfloat, GLfloat, GLfloat );
    // void glVertexAttrib3fv ( GLuint, const GLfloat* );
    // void glVertexAttrib4f ( GLuint, GLfloat, GLfloat, GLfloat, GLfloat );
    // void glVertexAttrib4fv ( GLuint, const GLfloat* );
    void glVertexAttribPointer ( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset );
    void glViewport ( GLint x, GLint y, GLsizei width, GLsizei height );
}
